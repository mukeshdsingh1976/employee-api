name: Sonar Scan
on:
  push:
    branches:
      - main # the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - uses: actions/setup-dotnet@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ~\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner globally
        run: |
          dotnet tool install --global dotnet-sonarscanner        

      - name: List Scanner Directory
        run: ls -la .sonar/scanner

      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          projectKey: "mukeshdsingh1976"
          organization: "mukeshdsingh1976"
          token: "${{ secrets.SONAR_TOKEN }}"    
        
      - name: Build and analyze
        shell: pwsh         
        run: |
          chmod -R 777 .
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"mukeshdsingh1976" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"