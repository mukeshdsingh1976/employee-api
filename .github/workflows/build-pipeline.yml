name: Build Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  bucket-name: "wizers3bucket"
  folder-name: "Wizer-API-App"
  application-name: "Wizer-API"
  deployment-group-name: "wizer-api"
  PROJECT_LOCATION: "/home/runner/work/employee-api/employee-api/employee-api/"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: 
        dotnet build --no-restore
        | 
        dotnet publish -c Release --property:PublishDir=publish -r linux-x64 --self-contained true /p:UseAppHost=true
      
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"

    # - name: Publish
    #   run: dotnet publish './${{ env.PROJECT_LOCATION }}/EmployeeManagementAPI.sln' -c Release --no-build --output './${{ env.PROJECT_LOCATION }}/publish'

    # - name: zip publish
    #   run: Compress-Archive -Path ./publish -DestinationPath ./publish/publish.zip

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: webjob-zip-deploy
        path: ${{ env.PROJECT_LOCATION }}/publish

    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Upload to S3
      run: | 
        aws s3 cp ${{ env.PROJECT_LOCATION }}/publish s3://{bucket-name}/{folder-name}/ --recursive

    # - name: Deploy to EC2 instance
    #   run: |
    #     aws deploy create-deployment --application-name {application-name} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name {deployment-group-name} --s3-location bucket={bucket-name},key={folder-name}/publish.zip,bundleType=zip

    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: release-${{ steps.date.outputs.date }}
    #     release_name: Release ${{ steps.date.outputs.date }}
    #     draft: false
    #     prerelease: false

